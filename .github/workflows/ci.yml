name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, staging ]
  pull_request:
    branches: [ main, develop, staging ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cache8063/words

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run linting
      run: npm run lint || true
      continue-on-error: true

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          type=raw,value=develop,enable=${{ github.ref == 'refs/heads/develop' }}
          type=raw,value=staging,enable=${{ github.ref == 'refs/heads/staging' }}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate deployment summary
      run: |
        echo "### ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: \`ghcr.io/cache8063/words:latest\`" >> $GITHUB_STEP_SUMMARY
        elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
          echo "- **Environment**: Staging" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: \`ghcr.io/cache8063/words:staging\`" >> $GITHUB_STEP_SUMMARY
        elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          echo "- **Environment**: Development" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: \`ghcr.io/cache8063/words:develop\`" >> $GITHUB_STEP_SUMMARY
        fi
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

    - name: Trigger Portainer Webhook
      if: github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main')
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/develop" ]] && [[ -n "${{ secrets.PORTAINER_WEBHOOK_DEV }}" ]]; then
          curl -X POST ${{ secrets.PORTAINER_WEBHOOK_DEV }}
          echo "Triggered development deployment"
        elif [[ "${{ github.ref }}" == "refs/heads/staging" ]] && [[ -n "${{ secrets.PORTAINER_WEBHOOK_STAGING }}" ]]; then
          curl -X POST ${{ secrets.PORTAINER_WEBHOOK_STAGING }}
          echo "Triggered staging deployment"
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]] && [[ -n "${{ secrets.PORTAINER_WEBHOOK_PROD }}" ]]; then
          curl -X POST ${{ secrets.PORTAINER_WEBHOOK_PROD }}
          echo "Triggered production deployment"
        fi