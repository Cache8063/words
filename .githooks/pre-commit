#!/bin/bash

# Pre-commit hook to enforce code quality and commit standards

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if we're in the middle of a merge
if [ -f .git/MERGE_HEAD ]; then
    exit 0
fi

echo "Running pre-commit checks..."

# 1. Run tests
echo -n "Running tests... "
if npm test > /dev/null 2>&1; then
    echo -e "${GREEN}✓${NC}"
else
    echo -e "${RED}✗${NC}"
    echo -e "${RED}Tests failed. Please fix failing tests before committing.${NC}"
    exit 1
fi

# 2. Check for console.log statements (excluding test files)
echo -n "Checking for console.log statements... "
if git diff --cached --name-only | grep -E '\.(js|ts)$' | grep -v spec | xargs grep -l "console\.log" > /dev/null 2>&1; then
    echo -e "${YELLOW}⚠${NC}"
    echo -e "${YELLOW}Warning: console.log statements found in:${NC}"
    git diff --cached --name-only | grep -E '\.(js|ts)$' | grep -v spec | xargs grep -l "console\.log" | sed 's/^/  - /'
    echo -e "${YELLOW}Consider removing them before committing.${NC}"
    # This is a warning, not a failure
fi

# 3. Check staged files
echo -n "Checking staged files... "
STAGED_COUNT=$(git diff --cached --name-only | wc -l)
if [ "$STAGED_COUNT" -eq 0 ]; then
    echo -e "${RED}✗${NC}"
    echo -e "${RED}No files staged for commit.${NC}"
    exit 1
else
    echo -e "${GREEN}✓ ($STAGED_COUNT files)${NC}"
fi

echo -e "${GREEN}All pre-commit checks passed!${NC}"
exit 0